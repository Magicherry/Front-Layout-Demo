{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from 'js-cookie';\nexport default {\n  name: 'Layout.vue',\n\n  data() {\n    return {\n      isCollapse: false,\n      searchKeyword: '',\n      menuItems: [{\n        path: '/',\n        name: '盒式布局'\n      }, {\n        path: '/fluidLayout',\n        name: '流式布局'\n      }, {\n        path: '/flexboxLayout',\n        name: '弹性布局'\n      }, {\n        path: '/gridLayout',\n        name: '网格布局'\n      }, {\n        path: '/positioningLayout',\n        name: '定位布局'\n      }, {\n        path: '/multiColumnLayout',\n        name: '多列布局'\n      }, {\n        path: '/responsiveLayout',\n        name: '响应式布局'\n      }]\n    };\n  },\n\n  computed: {\n    filteredMenuItems() {\n      const keyword = this.searchKeyword.toLowerCase().trim();\n\n      if (!keyword) {\n        return this.menuItems;\n      }\n\n      return this.menuItems.filter(item => item.name.toLowerCase().includes(keyword));\n    }\n\n  },\n  methods: {\n    toggleCollapse() {\n      this.isCollapse = !this.isCollapse;\n    },\n\n    handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n\n    handleSearch() {\n      const keyword = this.searchKeyword.toLowerCase().trim();\n      const menuItem = this.menuItems.find(item => item.name.toLowerCase().includes(keyword));\n\n      if (menuItem) {\n        this.$router.push(menuItem.path);\n      }\n\n      this.searchKeyword = '';\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAmFA;AAEA;EACAA,kBADA;;EAEAC;IACA;MACAC,iBADA;MAEAC,iBAFA;MAGAC,YACA;QAAAC;QAAAL;MAAA,CADA,EAEA;QAAAK;QAAAL;MAAA,CAFA,EAGA;QAAAK;QAAAL;MAAA,CAHA,EAIA;QAAAK;QAAAL;MAAA,CAJA,EAKA;QAAAK;QAAAL;MAAA,CALA,EAMA;QAAAK;QAAAL;MAAA,CANA,EAOA;QAAAK;QAAAL;MAAA,CAPA;IAHA;EAaA,CAhBA;;EAiBAM;IACAC;MACA;;MACA;QACA;MACA;;MACA;IACA;;EAPA,CAjBA;EA0BAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACAC;IACA,CANA;;IAOAC;MACAD;IACA,CATA;;IAUAE;MACA;MACA;;MAEA;QACA;MACA;;MAEA;IACA;;EAnBA;AA1BA","names":["name","data","isCollapse","searchKeyword","menuItems","path","computed","filteredMenuItems","methods","toggleCollapse","handleOpen","console","handleClose","handleSearch"],"sourceRoot":"src/views","sources":["Layout.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 头部区域 -->\n    <div style=\"height: 60px; line-height: 60px; background-color: #f8f8fb; display: flex;\">\n      <div style=\"width: 300px; display: flex; align-items: center;\">\n        <el-button type=\"text\" style=\"margin-left: 25px; font-weight: bold; font-size: 24px; color: #27282D;\" @click=\"$router.push('/')\">前端布局展示</el-button>\n        <span style=\"font-size: 14px; color: #999999; font-weight: 300; margin-left: 10px; margin-top: 10px;\">Demo</span>\n      </div>\n       <!-- 搜索框 -->\n      <div style=\"display: flex; align-items: center; margin-left: 200px auto; width: 400px;\">\n        <el-input v-model=\"searchKeyword\" placeholder=\"键入要搜索的布局\" @keydown.enter.native=\"handleSearch\" clearable>\n            <i class=\"el-input__icon el-icon-search\"></i>\n        </el-input>\n      </div>\n\n      <div style=\"flex: 1; text-align: right; padding-right: 20px;\">\n        <span style=\"font-size: 14px; color: #999999; font-weight: 300; margin-left: 10px; margin-top: 10px;\">Designed by Magicherry</span>\n      </div>\n    </div>\n\n    <!-- 侧边栏和主体 -->\n    <el-container style=\"display: flex; background-color: #f8f8fb; border: 1px\">\n      <!-- 侧边栏导航 -->\n      <el-aside :style=\"{ width: auto, minHeight: 'calc(100vh - 62px)', overflow: 'hidden', borderRight: 'none' }\">\n        <div class=\"spacer\" :style=\"{ height: '40px', width: isCollapse ? '60px' : '200px' }\">\n          <el-button title=\"收缩状态栏\"\n          :icon=\"isCollapse ? 'el-icon-s-unfold' : 'el-icon-s-fold'\"\n          width=\"50px\"\n          height=\"20px\"\n          plain=\"true\"\n          style=\"position: absolute; left: 7px; background-color: #f8f8fb; border: none; font-size: 20px; \"\n          @click=\"toggleCollapse\">\n        </el-button>\n        </div>\n\n          <el-menu :default-active=\"$route.path\" router class=\"el-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\" :collapse=\"isCollapse\" :style=\"{ marginBottom: '10px', backgroundColor: '#f8f8fb' }\">\n            <el-menu-item index=\"/\">\n            <i class=\"el-icon-receiving\"></i>\n            <span>盒式布局</span>\n          </el-menu-item>\n\n          <el-menu-item index=\"/fluidLayout\">\n              <i class=\"el-icon-c-scale-to-original\"></i>\n              <span>流式布局</span>\n          </el-menu-item>\n\n          <el-menu-item index=\"/flexboxLayout\">\n              <i class=\"el-icon-thumb\"></i>\n              <span>弹性布局</span>\n          </el-menu-item>\n\n          <el-menu-item index=\"/gridLayout\">\n              <i class=\"el-icon-notebook-1\"></i>\n              <span>网格布局</span> \n          </el-menu-item>\n          \n          <el-menu-item index=\"/positioningLayout\">\n              <i class=\"el-icon-s-operation\"></i>\n              <span>定位布局</span>\n          </el-menu-item>\n\n          <el-menu-item index=\"/multiColumnLayout\">\n              <i class=\"el-icon-document\"></i>\n              <span>多列布局</span>\n          </el-menu-item>\n\n          <el-menu-item index=\"/responsiveLayout\">\n              <i class=\"el-icon-download\"></i>\n              <span>响应式布局</span>\n          </el-menu-item>\n          \n        </el-menu>\n      </el-aside>\n\n      <!-- 主体数据 -->\n      <div class=\"mainbody\" :class=\"{'mainbody--collapsed': isCollapse, 'mainbody--expanded': !isCollapse}\">\n        <router-view />\n      </div>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport Cookies from 'js-cookie';\n\nexport default {\n  name: 'Layout.vue',\n  data() {\n    return {\n      isCollapse: false,\n      searchKeyword: '',\n      menuItems: [\n        { path: '/', name: '盒式布局' },\n        { path: '/fluidLayout', name: '流式布局' },\n        { path: '/flexboxLayout', name: '弹性布局' },\n        { path: '/gridLayout', name: '网格布局' },\n        { path: '/positioningLayout', name: '定位布局' },\n        { path: '/multiColumnLayout', name: '多列布局' },\n        { path: '/responsiveLayout', name: '响应式布局' },\n      ]\n    };\n  },\n  computed: {\n    filteredMenuItems() {\n      const keyword = this.searchKeyword.toLowerCase().trim();\n      if (!keyword) {\n        return this.menuItems;\n      }\n      return this.menuItems.filter(item => item.name.toLowerCase().includes(keyword));\n    }\n  },\n  methods: {\n    toggleCollapse() {\n      this.isCollapse = !this.isCollapse;\n    },\n    handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleSearch() {\n      const keyword = this.searchKeyword.toLowerCase().trim();\n      const menuItem = this.menuItems.find(item => item.name.toLowerCase().includes(keyword));\n\n      if (menuItem) {\n        this.$router.push(menuItem.path);\n      }\n\n      this.searchKeyword = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n  width: 200px;\n  min-height: 400px;\n}\n\n.spacer {\n  background-color: #f8f8fb;\n  transition: all 0.3s;\n}\n\n.mainbody {\n  flex: 1;\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px 0 0 0;\n  border-left: 1.5px solid #eae2e2;\n  border-top: 1.5px solid #eae2e2;\n  overflow: auto;\n}\n\n.mainbody--collapsed {\n  width: calc(100% - 60px);\n}\n\n.mainbody--expanded {\n  width: calc(100% - 200px);\n}\n\n.rounded-submenu .el-submenu__popover {\n  border-radius: 5px !important; /* 调整圆角的大小 */\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}